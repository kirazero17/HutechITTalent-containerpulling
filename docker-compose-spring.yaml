services:
  myapp-spring-container:    
    container_name: myapp-spring-container
    image: phi1234/myapp-spring:1.0.4
    ports:
      - 80:8070
    environment:
      #SPRING_DATASOURCE_URL: jdbc:mysql://mysql8-container:3306/myapp?serverTimezone=UTC&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_URL: jdbc:mysql://${MYSQL_IP}:3306/myapp?serverTimezone=UTC&allowPublicKeyRetrieval=true          
      MYSQL_ROOT_PASSWORD: 123456
      # REDIS_HOST: redis.app.phi.azn
      # REDIS_PORT: 6379
      #Kafka broker
      # KAFKA_BROKER_SERVER: kafka-broker-01      
      # KAFKA_BROKER_PORT: 19092
    #depends_on only waits for the container to start, not for the service inside the container to be fully operational
    networks:
      - phi-app-network
    restart: always
    # healthcheck:
    #   #test: ["CMD-SHELL", "curl --fail http://localhost:8088/healthcheck/health || exit 1"]
    #   test: ["CMD-SHELL", "curl --fail http://localhost:8088/api/v1/actuator/health || exit 1"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 3
    #   start_period: 20s #20s after container created, health check 

networks:
  phi-app-network:
    name: phi-app-network
    driver: bridge